<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>爱</title>
      <link href="/2023/03/11/%E7%88%B1/"/>
      <url>/2023/03/11/%E7%88%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>我好无聊啊</p><p>我好迷茫啊</p><p>我爱我的无聊</p><p>我爱我的迷茫</p><p>我爱我爱我的无聊</p><p>我爱我爱我的迷茫</p><p>😭</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>通过属性值获取枚举对象</title>
      <link href="/2023/03/09/%E9%80%9A%E8%BF%87%E5%B1%9E%E6%80%A7%E5%80%BC%E8%8E%B7%E5%8F%96%E6%9E%9A%E4%B8%BE%E5%AF%B9%E8%B1%A1/"/>
      <url>/2023/03/09/%E9%80%9A%E8%BF%87%E5%B1%9E%E6%80%A7%E5%80%BC%E8%8E%B7%E5%8F%96%E6%9E%9A%E4%B8%BE%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过属性值获取枚举对象 </span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@EnumMapping(value = &quot;code&quot;)</span></span><br><span class="line"><span class="meta">@JsonFormat(shape = JsonFormat.Shape.OBJECT)</span></span><br><span class="line"><span class="meta">@ApiModel(&quot;采样器运行状态&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">OperationStatus</span> &#123;</span><br><span class="line"></span><br><span class="line">    Running (<span class="string">&quot;0&quot;</span>, <span class="string">&quot;待机&quot;</span>),</span><br><span class="line">    AutoSampling (<span class="string">&quot;1&quot;</span>, <span class="string">&quot;自动采样中&quot;</span>)</span><br><span class="line"></span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> OperationStatus <span class="title function_">getEnum</span><span class="params">(String code)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (code)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;0&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> Running;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> AutoSampling;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>枚举常量新增、删除、修改等都需要对该函数进行对应的修改，耦合非常高。</p><p>优化↓</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> OperationStatus <span class="title function_">getByCode</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (OperationStatus operationStatus : OperationStatus.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (operationStatus.code.equals(code)) &#123;</span><br><span class="line">                <span class="keyword">return</span> operationStatus;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>通过这种改进，后面需要对枚举常量进行修改，该函数不需要改动。<br>但是每次获取枚举对象都要遍历一次枚举数组，时间复杂度是O(n)。</p><p>优化↓</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String,OperationStatus&gt; cache = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (OperationStatus operationStatus :OperationStatus.values())&#123;</span><br><span class="line">        cache.put(operationStatus.getCode(),operationStatus);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> OperationStatus <span class="title function_">getEnum</span><span class="params">(String code)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cache.getOrDefault(code,<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度为 O(1)，性能有所提升。<br>每个枚举类中都需要编写类似的代码，繁琐。<br>引入上述工具的枚举类，如果仅使用枚举常量，也会触发静态代码块的执行。</p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从一个实体的列表中找出具有特定属性值的实体</title>
      <link href="/2023/03/07/%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93%E7%9A%84%E5%88%97%E8%A1%A8%E4%B8%AD%E6%89%BE%E5%87%BA%E5%85%B7%E6%9C%89%E7%89%B9%E5%AE%9A%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%84%E5%AE%9E%E4%BD%93/"/>
      <url>/2023/03/07/%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93%E7%9A%84%E5%88%97%E8%A1%A8%E4%B8%AD%E6%89%BE%E5%87%BA%E5%85%B7%E6%9C%89%E7%89%B9%E5%AE%9A%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%84%E5%AE%9E%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>// 从一个实体的列表中找出具有特定属性值的实体<br>使用 Java 8 的 Stream API，可以从一个实体的列表中找出具有特定属性值的实体。从一个包含 Person<br>对象的列表中找出特定属性的实体。假设 Person 类包含 name 和 age 属性，从一个包含 Person 对象<br>的列表 personList 中找到所有年龄等于30 的人：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; filteredPersons = personList.stream()</span><br><span class="line">    .filter(person -&gt; person.getAge() == <span class="number">30</span>)</span><br><span class="line">    .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p>上面的代码中，使用 stream() 方法将列表转换为一个 Stream 对象，然后使用 filter() 方法过滤出<br>所有年龄等于 30 的 Person 对象。最后，使用 collect() 方法将所有符合条件的Person 对象收集到<br>一个新的列表中。<br>如果只想获取符合条件的第一个实体，可以使用 findFirst() 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Person&gt; firstPerson = personList.stream()</span><br><span class="line">    .filter(person -&gt; person.getAge() == <span class="number">30</span>)</span><br><span class="line">    .findFirst();</span><br></pre></td></tr></table></figure><p>使用 findFirst() 方法获取符合条件的第一个 Person 对象，并将其封装在一个 Optional 对象中。<br>如果没有符合条件的 Person 对象，Optional 对象将为空。</p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从旧表读取特定字段，存入新表</title>
      <link href="/2023/03/02/%E4%BB%8E%E6%97%A7%E8%A1%A8%E8%AF%BB%E5%8F%96%E7%89%B9%E5%AE%9A%E5%AD%97%E6%AE%B5%EF%BC%8C%E5%AD%98%E5%85%A5%E6%96%B0%E8%A1%A8/"/>
      <url>/2023/03/02/%E4%BB%8E%E6%97%A7%E8%A1%A8%E8%AF%BB%E5%8F%96%E7%89%B9%E5%AE%9A%E5%AD%97%E6%AE%B5%EF%BC%8C%E5%AD%98%E5%85%A5%E6%96%B0%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从旧表读取特定字段，存入新表。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IdShortener</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dbUrl</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dbUser</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dbPassword</span> <span class="operator">=</span> <span class="string">&quot;@123&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sourceTable</span> <span class="operator">=</span> <span class="string">&quot;device_instruct&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">targetTable</span> <span class="operator">=</span> <span class="string">&quot;new_instruct&quot;</span>;</span><br><span class="line">        String[] columnsToCopy = &#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;instruct&quot;</span>, <span class="string">&quot;remark&quot;</span>, <span class="string">&quot;status&quot;</span>&#125;; <span class="comment">// 要复制的列的名称</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(dbUrl, dbUser, dbPassword)) &#123;</span><br><span class="line">            <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 从表中读取数据</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">selectQuery</span> <span class="operator">=</span> <span class="string">&quot;SELECT name, instruct, remark, status FROM device_instruct&quot;</span>;</span><br><span class="line">            <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(selectQuery);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="comment">// 通过字段检索</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">instruct</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;instruct&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">remark</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;remark&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;status&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//执行插入</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span>  <span class="string">&quot;insert into new_instruct (name,instruct,remark,status) select name,instruct,remark,status from device_instruct&quot;</span>;</span><br><span class="line">            stmt.executeUpdate(sql2);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 完成后关闭</span></span><br><span class="line">            rs.close();</span><br><span class="line">            stmt.close();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日期格式转换</title>
      <link href="/2023/02/28/%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
      <url>/2023/02/28/%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 日期格式转换</span></span><br><span class="line"><span class="meta">@JsonFormat(shape = JsonFormat.Shape.STRING, pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"><span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@JsonFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paxos算法</title>
      <link href="/2022/10/28/Paxos%E7%AE%97%E6%B3%95/"/>
      <url>/2022/10/28/Paxos%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1><center>Paxos算法<center></h1><p>Paxos 算法是莱斯利·兰波特（Leslie Lamport）提出的一种基于消息传递的分布式<strong>共识算法</strong>。<em>【维基百科说过：Paxos常被误称为“一致性算法”。但是“一致性（consistency）”和“共识（consensus）”并不是同一个概念。Paxos是一个共识（consensus）算法。】</em></p><p>分布式系统中的节点通信存在两种模型：共享内存（Shared memory）和消息传递（Messages passing）。</p><p>基于消息传递通信模型的分布式系统，不可避免的会发生以下错误：进程可能会慢、被杀死或者重启，消息可能会延迟、丢失、重复。</p><p>在最普通的 Paxos 场景中，先不考虑可能出现“消息篡改”。（即拜占庭错误的情况：允许军中可能有叛徒，又要保证战争胜利，引申到计算机领域，成为一种容错理论）Paxos 算法解决的问题是在一个可能发生消息延迟、丢失、重复的分布式系统中，如何对某个值的看法相同，保证无论发生以上任何异常，都不会破坏决议的共识机制。</p><p>为描述Paxos算法，Lamport虚拟了一个叫做Paxos的希腊城邦，这个岛按照议会民主制的政治模式制订法律，但是没有人愿意将自己的全部时间和精力放在这种事情上。所以无论是议员，议长或者传递纸条的服务员都不能承诺别人需要时一定会出现，也无法承诺批准决议或者传递消息的时间。但是这里假设没有拜占庭将军问题（即虽然有可能一个消息被传递了两次，但是绝对不会出现错误的消息）；只要等待足够的时间，消息就会被传到。另外，Paxos岛上的议员是不会反对其他议员提出的决议的。</p><p>对应于分布式系统，议员对应于各个节点，制定的法律对应于系统的状态。各个节点需要进入一个一致的状态。</p><hr><p>Paxos算法中，有三种角色：<br>提议者<strong>（Proposer）、</strong>接收者<strong>（Acceptor）、</strong>学习者<strong>（Learners）</strong></p><p>在具体的实现中，一个进程可以同时充当多种角色。还有一个概念叫提案<strong>（Proposal）</strong>。最终要达成一致的value就在提案里。</p><p>算法的基本逻辑为：</p><ol><li>提议者向所有接受者发送消息prepare(n)。（假设他们都会响应，只发送给大多数接受者就足够了。）</li><li>每个接受者将 n 与它已响应准备且编号最高的消息的提议进行比较（编号会自增）。如果 n 更大，它以 ack(v, n) 响应，其中 v 是它已经接受的编号最高的提议，n 是该提议的编号。（如果 n 小，此时应该做出的优化是使接受者发回 nack消息，让提议者知道该提案已经被认定，应该撤回并重试。</li><li>提议者等待从大多数接受者那里收到已经确认的提案。如果任何 ack 包含一个值，它会将 v 设置为它收到的最新（按提案编号排序）值。然后它将 accept(n, v) 发送给所有接受者（或只是多数）。接收者负责学习接收到的提案。</li><li>在接收到accept(n, v) 后，accepter 接受v，除非它已经接收到过 prepare(n) 大于当前n的提案。</li></ol><hr><p>Apache ZooKeeper 就是使用一个类Multi-Paxos的共识算法作为底层存储协同的机制。<br>Google在其分布式锁服务中应用了Multi-Paxos算法。Chubby lock应用于大表（Bigtable），在谷歌所提供的各项服务中有广泛应用。</p><hr><p>维基百科：<a href="https://zh.wikipedia.org/wiki/Paxos%E7%AE%97%E6%B3%95">https://zh.wikipedia.org/wiki/Paxos算法</a></p><p>Lamport于1998年第一次公开发表[PDF] ：<a href="https://lamport.azurewebsites.net/pubs/lamport-paxos.pdf">https://lamport.azurewebsites.net/pubs/lamport-paxos.pdf</a></p><p>Lamport 觉得同行无法接受他的幽默感，于是用容易接受的方法重新表述了一遍[PDF] ：<a href="https://lamport.azurewebsites.net/pubs/paxos-simple.pdf">https://lamport.azurewebsites.net/pubs/paxos-simple.pdf</a></p><p>这个讲的不错：<a href="https://www.youtube.com/watch?v=JEpsBg0AO6o">https://www.youtube.com/watch?v=JEpsBg0AO6o</a></p><p>这个讲的不错 ：<a href="https://www.cnblogs.com/linbingdong/p/6253479.html">https://www.cnblogs.com/linbingdong/p/6253479.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ImageMagick图像编辑</title>
      <link href="/2022/10/13/ImageMagick/"/>
      <url>/2022/10/13/ImageMagick/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a><strong>ImageMagick</strong></h1><p><strong>官网：</strong><a href="https://imagemagick.org/">ImageMagick</a></p><p><strong>GitHub：</strong><a href="https://github.com/imagemagick/imagemagick">ImageMagick·github</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h2><p><strong>ImageMagick</strong>是一套功能强大、稳定而且开源的工具集和开发包，可以用来读、写和处理超过89种基本格式的图片文件，包括流行的TIFF、JPEG、GIF、 PNG、PDF以及PhotoCD等格式。利用ImageMagick，可以根据web应用程序的需要动态生成图片, 还可以对一个(或一组)图片进行改变大小、旋转、锐化、减色或增加特效等操作，并将操作的结果以相同格式或其它格式保存，对图片的操作，即可以通过命令行进行，也可以用C/C++、Perl、Java、PHP、Python或Ruby编程来完成。</p><p>现在有许多优秀的图像编辑器可用，你可能会想知道为什么有人会选择一个非 GUI 的、基于命令行的程序，如 ImageMagick。一方面，它非常可靠。但更大的好处是，它允许你建立一个<strong>以特定的方式编辑大量图像</strong>的方式。</p><br><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><strong>安装步骤</strong></h2><p>1、首先第一步肯定是去官网下载安装包：<a href="http://www.imagemagick.org/script/download.php">http://www.imagemagick.org/script/download.php</a></p><p>2、下载完成之后(这里使用的操作系统是windows)，直接运行ImageMagick-7.0.7-21-Q16-x64-dll.exe程序，然后一直点击Next即可！</p><p>3、默认情况下安装路径为C:\Program Files\ImageMagick-7.0.7-Q16，在该路径下应该存在一个 magick.exe（7之前的版本是convert.exe）应用程序。</p><p>4、系统中可能存在多个convert.exe应用程序，所以很多教程让大家修改当前convert.exe应用程序的名称。例如让大家把”convert.exe”修改为“im_convert.exe”。<em>（这里要注意一下，我介绍的版本为7.0+，网上好多介绍的都是6.0+，其实从7.0+版本以后直接改用“magick”命令了，不需要修改convert.exe名称）</em></p><br><h2 id="基础命令使用"><a href="#基础命令使用" class="headerlink" title="基础命令使用"></a>基础命令使用</h2><img style = "border:3px solid #17202A;border-radius:5px;" src="https://res.cloudinary.com/di22igym7/image/upload/v1665659678/samples/blog/lucy1_nvmk2x.png"><p align="center">原图</p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">magick lucy1.png -edge 3 lucyyy.jpg</span><br><span class="line"></span><br><span class="line">magick lucy1.png -colors 4 lucyyyyyyy.jpg</span><br><span class="line"></span><br><span class="line">magick lucy1.png -colors 4 -edge 3 lucyyyyyyyyyyy.jpg</span><br></pre></td></tr></table></figure><div>    <div style="background-color: #FCF3CF;float:left;width:33%;border-right:1px solid #FDFEFE">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1665659684/samples/blog/lucyyy_djnbio.jpg">        <font style = "position:relative;left:30%;top:-10px;">lucyyy.jpg </font>    </div>    <div style="background-color: #FCF3CF;float:left;width:33%;border-right:1px solid #FDFEFE">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1665659676/samples/blog/lucyyyyyyy_p0tbuj.jpg">        <font style = "position:relative;left:30%;top:-10px;">lucyyyyyyy.jpg</font>    </div>    <div style="background-color: #FCF3CF;float:left;width:33%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1665659674/samples/blog/lucyyyyyyyyyyyyyyyy_qkohvq.jpg">        <font style = "position:relative;left:30%;top:-10px;">lucyyyyyyyyyyy.jpg</font>    </div></div><br><br><br><br><br><br><br><hr><p><strong>蒙太奇</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">montage -label %f DSC_0008.jpg charcoal_example.jpg -geometry +10+10 -resize 25% -shadow -title &#x27;charcoal demo&#x27; charcoal_demo.jpg</span><br><span class="line">-label 选项会在每个图像下方标记它的文件名(%f)。不用 -geometry 选项，所有的图像将是缩略图大小（120 像素宽），+10+10 负责边框大小。接下来，我调整了整个最终组合的大小（-resize 25%），并添加了一个阴影（没有设置，因此是默认值），最后为这次 montage 操作创建了一个标题（-title）。</span><br><span class="line"></span><br><span class="line">使用示例：</span><br><span class="line">magick montage lucy1.png -geometry +30+30 -resize 25% -shadow -title Lucy lucy_demo.jpg</span><br></pre></td></tr></table></figure><img style = "border:3px solid #17202A;border-radius:5px;" src="https://res.cloudinary.com/di22igym7/image/upload/v1665659673/samples/blog/lucy_demo_zlnkga.jpg"><p><strong>更多教程可以去官网查阅：</strong></p><div style = "background-color: #FAD7A0;border-radius:5px;padding-top:10px;padding-bottom:3px;padding-left:30px;"><p>&nbsp;<a href="https://imagemagick.org/Usage/basics/">ImageMagick Examples – Basic Usage</a><br>&nbsp;<a href="https://imagemagick.org/script/command-line-processing.php">ImageMagick Examples – command-line-processing</a></p></div>]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Threadlocal相关问题</title>
      <link href="/2022/09/17/ThreadLocal%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
      <url>/2022/09/17/ThreadLocal%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1663412816/samples/blog/Untitled_p87h0b.png" alt="threadlocal"></p><h2 id="ThreadLocal是什么？"><a href="#ThreadLocal是什么？" class="headerlink" title="ThreadLocal是什么？"></a>ThreadLocal是什么？</h2><p>ThreadLocal类提供线程局部变量。这些变量与普通的对应变量的不同之处在于：每个访问一个变量的线程(通过它的get或set方法)都有自己独立初始化的变量副本。ThreadLocal实例通常是类中的私有静态字段，它们希望将状态与线程相关联(例如，用户ID或事务ID)。</p><p>只要线程是存活的，并且ThreadLocal实例是可访问的，每个线程都持有对其线程局部变量副本的隐式引用；在一个线程消失后，它的所有线程本地实例副本都要服从垃圾收集(除非存在对这些副本的其他引用)。</p><p><strong>ThreadLocal.set()方法整体流程如下:</strong></p><ol><li>每次进入set()方法，都会调用Thread.currentThread()方法获取到当前的线程对象;</li><li>然后调用 getMap(t)获取当前线程中的ThreadLocalMap对象，通过源码调试，我们知道ThreadLocalMap类型的threadLocals引用位于java.lang.Thread类中，这样对可以断定，每个Thread都持有一个ThreadLocalMap；</li><li>getMap(t)后会判断结果是否为空，非空则调用ThreadLocalMap.set()方法，空则调用createMap()用线程和值创建新的ThreadLocalMap对象;</li><li>ThreadLocalMap是ThreadLocal的一个静态内部类，ThreadLocalMap内部再封装一个静态的内部Entry类来存放值，Entry继承WeakReference弱引用，所以最后数据存入一个table数组，数组的元素对象有两个字段，refrent==threadLocal，value==的object；</li><li>ThreadLocalMap.set()方法，先从Entry[]数组中查询当前key对应的引用，如果存在则返回，如果不存在，则清除replaceStaleEntry(key, value, i)，处理内存泄露问题；</li><li>createMap()底层维护的是一个Entry[]，来存放ThreadLocal和value；</li><li>从set()中也可以看出ThreadLocalMap是惰性构造的，所以我们只有在至少有一个条目要放进去时才创建一个ThreadLocalMaps。</li></ol><h2 id="1-ThreadLocal底层数据结构"><a href="#1-ThreadLocal底层数据结构" class="headerlink" title="1.ThreadLocal底层数据结构"></a>1.ThreadLocal底层数据结构</h2><p>Thread 类的内部定义了两个 ThreadLocalMap，ThreadLocalMap 是存储 ThreadLocal 的容器，一个是此线程私有的 threadLocals ，一个是可继承父类 ThreadLocal 的inheritableThreadLocals；</p><p>其定义了一个静态内部类 ThreadLocalMap，我们可以把 ThreadLocalMap 理解为线程存储私有数据的容器。存取数据时调用的是 ThreadLocalMap 类的 get、set 方法。</p><p>ThreadLocalMap 中定义了一个 Entry 数组，该数组存放一个个 Entry 对象；Entry 对象是以 ThreadLocal 作为 key，任意类型作为 value 的一种键值对。</p><p><strong>一个 Thread 类可以有多个 ThreadLocal 类，一个 Thread 类拥有一个 ThreadLocalMap，该集合并没有实现 map 接口，底层数据结构是数组；键值对Entry(ThreadLocal&lt;?&gt; k, Object v)（多个 ThreadLocal）都存储在 table 数组中，就像Map [{id:1},{name:”张三”},{age:20}]。</strong></p><p>该数据结构是为了让每个线程可以关联多个 ThreadLocal 变量。这也就解释了 ThreadLocal 声明的变量为什么在每一个线程都有自己的专属本地变量。</p><h2 id="2-如何保证线程安全"><a href="#2-如何保证线程安全" class="headerlink" title="2.如何保证线程安全"></a>2.如何保证线程安全</h2><p>set方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(T value)</span> &#123;</span><br><span class="line"><span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line"><span class="type">ThreadLocalMap</span> <span class="variable">map</span> <span class="operator">=</span> getMap(t);</span><br><span class="line"><span class="keyword">if</span> (map != <span class="literal">null</span>)</span><br><span class="line">map.set(<span class="built_in">this</span>, value);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">createMap(t, value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ThreadLocalMap <span class="title function_">getMap</span><span class="params">(Thread t)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> t.threadLocals;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到ThreadLocal操作值的时候是取得当前线程的ThreadLocalMap对象，然后把值设置到了这个对象中，这样对于不同的线程得到的就是不同的ThreadLocalMap，那么向其中保存值或者修改值都只是会影响到当前线程，这样就保证了线程安全。</p><h2 id="3-ThreadLocal在什么情况下会造成内存泄漏"><a href="#3-ThreadLocal在什么情况下会造成内存泄漏" class="headerlink" title="3.ThreadLocal在什么情况下会造成内存泄漏"></a>3.ThreadLocal在什么情况下会造成内存泄漏</h2><p>ThreadLocalMap内部维护了一个Entry[] table来存储键值对的映射关系，内存泄漏和Entry类有非常大的关系，下面是Entry的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Entry</span> <span class="keyword">extends</span> <span class="title class_">WeakReference</span>&lt;ThreadLocal&lt;?&gt;&gt; &#123;</span><br><span class="line">    <span class="comment">/** The value associated with this ThreadLocal. */</span></span><br><span class="line">    Object value;</span><br><span class="line">    Entry(ThreadLocal&lt;?&gt; k, Object v) &#123;</span><br><span class="line">        <span class="built_in">super</span>(k);</span><br><span class="line">        value = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Entry将ThreadLocal作为Key，值作为value保存，它继承自WeakReference，注意构造函数里的第一行代码super(k)，这意味着ThreadLocal对象是一个「弱引用」。</p><p>由于ThreadLocal对象是弱引用，如果外部没有强引用指向它，它就会被GC回收，导致Entry的Key为null，如果这时value外部也没有强引用指向它，那么value就永远也访问不到了，按理也应该被GC回收，但是由于Entry对象还在强引用value，导致value无法被回收，这时「内存泄漏」就发生了，value成了一个永远也无法被访问，但是又无法被回收的对象。</p><p>Entry对象属于ThreadLocalMap，ThreadLocalMap属于Thread，如果线程本身的生命周期很短，短时间内就会被销毁，那么「内存泄漏」立刻就会得到解决，只要线程被销毁，value也会随之被回收。问题是，线程本身是非常珍贵的计算机资源，很少会去频繁的创建和销毁，一般都是通过线程池来使用，这就将线程的生命周期大大拉长，「内存泄漏」的影响也会越来越大。</p><h2 id="4-如何解决内存泄漏问题"><a href="#4-如何解决内存泄漏问题" class="headerlink" title="4.如何解决内存泄漏问题"></a>4.如何解决内存泄漏问题</h2><p>每次操作set、get、remove操作时，会相应调用 ThreadLocalMap 的三个方法，ThreadLocalMap的三个方法在每次被调用时 都会直接或间接调用一个 expungeStaleEntry() 方法，这个方法会将key为null的 Entry 删除，从而避免内存泄漏。</p><p>如果一个线程运行周期较长，而且将一个大对象放入LocalThreadMap后便不再调用set、get、remove方法仍然有可能key的弱引用被回收后，引用没有被回收，此时该仍然可能会导致内存泄漏。这个问题没办法通过ThreadLocal解决，而是需要程序员在完成ThreadLocal的使用后要养成手动调用remove的习惯，从而避免内存泄漏。</p><p><strong>既然弱引用会导致内存泄漏，那ThreadLocalMap为什么对ThreadLocal的引用要设置成弱引用？</strong></p><p>为了尽快回收这个线程变量，因为这个线程变量可能使用场景不是特别多，所以希望使用完后能尽快被释放掉。因为线程拥有的资源越多，就越臃肿，线程切换的开销就越大，所以希望尽量降低线程拥有的资源量。</p><h2 id="5-java中的引用方式：强引用，弱引用，软引用，虚引用"><a href="#5-java中的引用方式：强引用，弱引用，软引用，虚引用" class="headerlink" title="5.java中的引用方式：强引用，弱引用，软引用，虚引用"></a>5.java中的引用方式：强引用，弱引用，软引用，虚引用</h2><p><strong>强引用  &gt;  软引用  &gt;  弱引用  &gt;  虚引用</strong></p><p><strong>1、强引用（StrongReference）</strong></p><p>强引用是使用最普遍的引用。如果一个对象具有强引用，那垃圾回收器绝不会回收它。如下：</p><p><code>Object o=new Object();   //  强引用</code></p><p><strong>2、软引用（SoftReference）</strong></p><p>如果一个对象只具有软引用，则内存空间足够，垃圾回收器就不会回收它；如果内存空间不足了，就会回收这些对象的内存。只要垃圾回收器没有回收它，该对象就可以被程序使用。软引用可用来实现内存敏感的高速缓存。</p><p><code>String str=new String(&quot;abc&quot;);                                     // 强引用 SoftReference&lt;String&gt; softRef=new SoftReference&lt;String&gt;(str);     // 软引用</code></p><p><strong>3、弱引用（WeakReference）</strong></p><p>弱引用与软引用的区别在于：只具有弱引用的对象拥有更短暂的生命周期。在垃圾回收器线程扫描它所管辖的内存区域的过程中，一旦发现了只具有弱引用的对象，不管当前内存空间足够与否，都会回收它的内存。不过，由于垃圾回收器是一个优先级很低的线程，因此不一定会很快发现那些只具有弱引用的对象。</p><p><code>String str=new String(&quot;abc&quot;);     WeakReference&lt;String&gt; abcWeakRef = new WeakReference&lt;String&gt;(str); str=null;</code></p><p><strong>4、虚引用（PhantomReference）</strong></p><p>“虚引用”顾名思义，就是形同虚设，与其他几种引用都不同，虚引用并不会决定对象的生命周期。如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收器回收。</p><p>虚引用主要用来跟踪对象被垃圾回收器回收的活动。虚引用与软引用和弱引用的一个区别在于：虚引用必须和引用队列 （ReferenceQueue）联合使用。当垃圾回收器准备回收一个对象时，如果发现它还有虚引用，就会在回收对象的内存之前，把这个虚引用加入到与之 关联的引用队列中。</p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeanUtils.copyProperties()</title>
      <link href="/2022/09/16/BeanUtils-copyProperties/"/>
      <url>/2022/09/16/BeanUtils-copyProperties/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong><strong>org.springframework.beans.BeanUtils</strong></strong></p><p>利用反射机制对JavaBean的属性进行处理，对对象进行属性值的复制。如果 两个对象之间存在名称不相同的属性，则 BeanUtils 不对这些属性进行处理，需要程序手动处理。</p><p>减少大量get/set代码，方便阅读。</p><p>对象a拷贝到对b</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BeanUtils.copyProperties(a, b);</span><br></pre></td></tr></table></figure><p>注意：<strong><strong>（org.apache.commons.beanutils.BeanUtils）中的BeanUtils.copyProperties(A,B)方法是将B中的值赋值给A。</strong></strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis 高级</title>
      <link href="/2022/08/17/Mybatis%E9%AB%98%E7%BA%A7/"/>
      <url>/2022/08/17/Mybatis%E9%AB%98%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一-MyBatis-多表操作"><a href="#一-MyBatis-多表操作" class="headerlink" title="一. MyBatis 多表操作"></a>一. MyBatis 多表操作</h1><ul><li>创建之后用到的表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database db4;</span><br><span class="line">use db4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> card(</span><br><span class="line">                        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                        number <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">                        pid <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">constraint</span> cp_fk <span class="keyword">foreign</span> key (pid) <span class="keyword">references</span> person(id)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> card <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;12345&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> card <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;23456&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> card <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;34567&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> person(</span><br><span class="line">                     id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                     name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">                     age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">24</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">25</span>);</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> classes(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> classes <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;黑马一班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> classes <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;黑马二班&#x27;</span>);</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">                        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                        name <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">                        age <span class="type">int</span>,</span><br><span class="line">                        cid <span class="type">int</span>,</span><br><span class="line">                        <span class="keyword">constraint</span> cs_fk <span class="keyword">foreign</span> key (cid) <span class="keyword">references</span> classes(id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">24</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">25</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;马六&#x27;</span>,<span class="number">26</span>,<span class="number">2</span>);</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> course(</span><br><span class="line">                        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                        name <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;语文&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;数学&#x27;</span>);</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu_cr(</span><br><span class="line">                       id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                       sid <span class="type">int</span>,</span><br><span class="line">                       cid <span class="type">int</span>,</span><br><span class="line">                       <span class="keyword">constraint</span> sc_fk1 <span class="keyword">foreign</span> key (sid) <span class="keyword">references</span> student(id),</span><br><span class="line">                       <span class="keyword">constraint</span> sc_fk2 <span class="keyword">foreign</span> key (cid) <span class="keyword">references</span> course(id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_cr <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">2</span>),(<span class="keyword">null</span>,<span class="number">2</span>,<span class="number">1</span>),(<span class="keyword">null</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li></ul><p>获取sqlsession会话对象工具类</p><ul><li>SqlsessionUtils  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classSessionUtils &#123;</span><br><span class="line"><span class="keyword">public</span> staticSqlSession <span class="title function_">getSqlsession</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">factory</span> <span class="operator">=</span>newSqlSessionFactoryBuilder().build(is);</span><br><span class="line">            is.close();</span><br><span class="line">            sqlSession = factory.openSession(<span class="literal">true</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">returnsqlSession;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="1-一对一"><a href="#1-一对一" class="headerlink" title="1.一对一"></a>1.一对一</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828949/samples/blog/dev/1to1_t2pe8d.jpg" alt="1to1.jpg"></p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828965/samples/blog/dev/Untitled_c9bx2q.png" alt="Untitled"></p><p><strong>表：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> card(</span><br><span class="line">                        idint <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">numbervarchar(<span class="number">20</span>),</span><br><span class="line">                        pidint,</span><br><span class="line"></span><br><span class="line">constraintcp_fk<span class="keyword">foreign</span> key(pid)referencesperson(id)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span>cardvalues(<span class="keyword">null</span>,<span class="string">&#x27;12345&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span>cardvalues(<span class="keyword">null</span>,<span class="string">&#x27;23456&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span>cardvalues(<span class="keyword">null</span>,<span class="string">&#x27;34567&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> person(</span><br><span class="line">                     id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                     name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">                     age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">24</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">25</span>);</span><br></pre></td></tr></table></figure><p><strong>pojo类</strong></p><ul><li>Person  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br></pre></td></tr></table></figure></li><li>Card  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">privateInteger id;</span><br><span class="line">privateString number;</span><br><span class="line"></span><br><span class="line">privatePerson p;</span><br></pre></td></tr></table></figure></li></ul><p><strong>interface接口:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OtoMapper</span> &#123;</span><br><span class="line"><span class="comment">//一对一</span></span><br><span class="line">List&lt;Card&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mapper映射:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.OtoMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;OneToOne&quot;</span> <span class="attr">type</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;number&quot;</span> <span class="attr">property</span>=<span class="string">&quot;number&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        association：配置被包含对象的映射关系--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        property：被包含对象变量名--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        javaType：被包含对象数据类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;p&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;pid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    List&lt;Card&gt; selectAll();一对一--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;OneToOne&quot;</span>&gt;</span></span><br><span class="line">        select c.id cid,number,pid,name,age from card c,person p where c.pid=p.id;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Test类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对一</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidselectAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SessionUtils.getSqlsession();</span><br><span class="line"></span><br><span class="line">        <span class="type">OtoMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(OtoMapper.class);</span><br><span class="line">        List&lt;Card&gt; cards = mapper.selectAll();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Card c : cards) &#123;</span><br><span class="line">            System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查询结果：</strong><br>        Card{id=1, number=’123456’, p=Person{id=1, name=’张三’, age=23}}<br>        Card{id=2, number=’234567’, p=Person{id=2, name=’李四’, age=24}}<br>        Card{id=3, number=’345678 ‘, p=Person{id=3, name=’王五 ‘, age=25}}</p><hr><h2 id="2-一对多"><a href="#2-一对多" class="headerlink" title="2.一对多"></a>2.一对多</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828948/samples/blog/dev/onetomany_uqw1vy.jpg" alt="onetomany.jpg"></p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828948/samples/blog/dev/Untitled_1_nk1bci.png" alt="Untitled"></p><p><strong>表：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> classes(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> classes <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;黑马一班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> classes <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;黑马二班&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">                        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                        name <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">                        age <span class="type">int</span>,</span><br><span class="line">                        cid <span class="type">int</span>,</span><br><span class="line">                        <span class="keyword">constraint</span> cs_fk <span class="keyword">foreign</span> key (cid) <span class="keyword">references</span> classes(id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">24</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">25</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;马六&#x27;</span>,<span class="number">26</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><strong>pojo类:</strong></p><ul><li>Classes  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">privateInteger id;</span><br><span class="line">privateString  name;</span><br><span class="line"></span><br><span class="line">privateList&lt;Student&gt; students;</span><br></pre></td></tr></table></figure></li><li>Student  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br><span class="line"></span><br><span class="line">privateList&lt;Course&gt; courses;<span class="comment">//多对多时增加一个属性</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>interface接口:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> interfaceOtmMapper &#123;</span><br><span class="line"><span class="comment">//一对多</span></span><br><span class="line">List&lt;Classes&gt; <span class="title function_">OtmSelectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mapper映射:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.OtmMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;OneToMany&quot;</span> <span class="attr">type</span>=<span class="string">&quot;classes&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        collection配置被包含的集合对象的映射关系</span></span><br><span class="line"><span class="comment">            property被包含对象的变量名</span></span><br><span class="line"><span class="comment">            ofType被包含对象的实际数据类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;OtmSelectAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;OneToMany&quot;</span>&gt;</span></span><br><span class="line">        select c.id cid,c.name cname,s.id sid,s.name sname,s.age sage</span><br><span class="line">        from classes c,student s where s.cid=c.id;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Test类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidOtmSelectAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SessionUtils.getSqlsession();</span><br><span class="line"></span><br><span class="line">        <span class="type">OtmMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(OtmMapper.class);</span><br><span class="line">        List&lt;Classes&gt; classes = mapper.OtmSelectAll();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Classes c : classes) &#123;</span><br><span class="line">            System.out.println(c.getId()+<span class="string">&quot;--&quot;</span>+c.getName());</span><br><span class="line">            List&lt;Student&gt; students = c.getStudents();</span><br><span class="line"><span class="keyword">for</span>(Student s : students) &#123;</span><br><span class="line">                System.out.println(s);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>执行结果:</strong><br>        1–黑马一班<br>        Student{id=1, name=’张三’, age=23}<br>        Student{id=2, name=’李四’, age=24}<br>        ================<br>        2–黑马二班<br>        Student{id=3, name=’王五’, age=25}<br>        Student{id=4, name=’马六’, age=26}<br>        ================</p><hr><h2 id="3-多对多"><a href="#3-多对多" class="headerlink" title="3.多对多"></a>3.多对多</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829133/samples/blog/dev/mtm_lygw0a.jpg" alt="mtm.jpg"></p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829112/samples/blog/dev/Untitled_u1qsze.png" alt="Untitled"></p><p><strong>表：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">                        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                        name <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">                        age <span class="type">int</span>,</span><br><span class="line">                        cid <span class="type">int</span>,</span><br><span class="line">                        <span class="keyword">constraint</span> cs_fk <span class="keyword">foreign</span> key (cid) <span class="keyword">references</span> classes(id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">24</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">25</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;马六&#x27;</span>,<span class="number">26</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> course(</span><br><span class="line">                        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                        name <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;语文&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="string">&#x27;数学&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu_cr(</span><br><span class="line">                       id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">                       sid <span class="type">int</span>,</span><br><span class="line">                       cid <span class="type">int</span>,</span><br><span class="line">                       <span class="keyword">constraint</span> sc_fk1 <span class="keyword">foreign</span> key (sid) <span class="keyword">references</span> student(id),</span><br><span class="line">                       <span class="keyword">constraint</span> sc_fk2 <span class="keyword">foreign</span> key (cid) <span class="keyword">references</span> course(id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_cr <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">2</span>),(<span class="keyword">null</span>,<span class="number">2</span>,<span class="number">1</span>),(<span class="keyword">null</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><strong>pojo类：</strong></p><ul><li>Student  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br><span class="line"></span><br><span class="line">privateList&lt;Course&gt; courses;<span class="comment">//多对多时增加一个属性</span></span><br></pre></td></tr></table></figure></li><li>Course  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br></pre></td></tr></table></figure></li></ul><p><strong>interface接口:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> interfaceMtmMapper &#123;</span><br><span class="line">    List&lt;Student&gt; <span class="title function_">mtmSelectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mapper映射:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.MtmMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;manyToMany&quot;</span> <span class="attr">type</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;courses&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;course&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;mtmSelectAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;manyToMany&quot;</span>&gt;</span></span><br><span class="line">        select sc.sid,s.name sname,s.age sage,sc.cid,c.name cname</span><br><span class="line">        from student s,course c,stu_cr sc where sc.cid=c.id and sc.sid=s.id;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Test类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多对多</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidmtmSelectAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SessionUtils.getSqlsession();</span><br><span class="line"></span><br><span class="line">        <span class="type">MtmMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(MtmMapper.class);</span><br><span class="line">        List&lt;Student&gt; stu = mapper.mtmSelectAll();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Student s : stu) &#123;</span><br><span class="line">            System.out.println(s.getId()+<span class="string">&quot;--&quot;</span>+s.getName()+<span class="string">&quot;--&quot;</span>+s.getAge());</span><br><span class="line">            List&lt;Course&gt; cos = s.getCourses();</span><br><span class="line"><span class="keyword">for</span>(Course c : cos) &#123;</span><br><span class="line">                System.out.println(c);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果:</strong><br>        1–张三–23<br>        Course{id=1, name=’语文’}<br>        Course{id=2, name=’数学’}<br>        ================<br>        2–李四–24<br>        Course{id=1, name=’语文’}<br>        Course{id=2, name=’数学’}</p><hr><h2 id="4-小结"><a href="#4-小结" class="headerlink" title="4.小结"></a>4.小结</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829112/samples/blog/dev/Untitled_1_muxioy.png" alt="Untitled"></p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829113/samples/blog/dev/Untitled_2_yv0hxs.png" alt="Untitled"></p><p><strong>注意：</strong>本多表操作以查询作为演示，表中的外键字段并没有在实体类中体现。</p><hr><h1 id="二-MyBatis-注解实现多表操作"><a href="#二-MyBatis-注解实现多表操作" class="headerlink" title="二. MyBatis 注解实现多表操作"></a>二. MyBatis 注解实现多表操作</h1><h2 id="1-一对一-1"><a href="#1-一对一-1" class="headerlink" title="1.一对一"></a>1.一对一</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829271/samples/blog/dev/Untitled_dddeqt.png" alt="Untitled"></p><ul><li>pojo类  Card  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classCard &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString number;</span><br><span class="line"></span><br><span class="line">privatePerson p;</span><br><span class="line"></span><br><span class="line">publicCard() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicCard(Integer id, String number, Person p) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.number = number;</span><br><span class="line"><span class="built_in">this</span>.p = p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getNumber</span><span class="params">()</span> &#123;</span><br><span class="line">returnnumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetNumber</span><span class="params">(String number)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.number = number;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicPerson <span class="title function_">getP</span><span class="params">()</span> &#123;</span><br><span class="line">returnp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetP</span><span class="params">(Person p)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.p = p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Card&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, number=&#x27;&quot;</span> + number + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, p=&quot;</span> + p +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>  Person  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classPerson &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br><span class="line"></span><br><span class="line">publicPerson() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicPerson(Integer id, String name, Integer age) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">returnname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">returnage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>interface接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CardMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from card&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;number&quot;,property = &quot;number&quot;),</span></span><br><span class="line"><span class="meta">            @Result(</span></span><br><span class="line"><span class="meta">                    property = &quot;p&quot;,   //被包含对象的变量名</span></span><br><span class="line"><span class="meta">                    javaType = Person.class,   //被包含对象的实际数据类型</span></span><br><span class="line"><span class="meta">                    column = &quot;pid&quot;,   //根据查询出的card表中的pid字段来查询person表</span></span><br><span class="line"><span class="meta">                    /**</span></span><br><span class="line"><span class="meta">                     * one、@One 一对一固定写法</span></span><br><span class="line"><span class="meta">                     * select属性 指定调用哪个接口中的哪个方法</span></span><br><span class="line"><span class="meta">                    */</span></span><br><span class="line"><span class="meta">                      one=@One(select = &quot;com.itheima.mapper.PersonMapper.selectById&quot;)</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    List&lt;Card&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> interfacePersonMapper &#123;</span><br><span class="line"><span class="meta">@Select(&quot;select * from person where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    Person <span class="title function_">selectById</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mapper映射文件（省略）</p><p>Test类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注解一对一查询所有</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidselectAll</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SessionUtils.getSqlsession();</span><br><span class="line"></span><br><span class="line">    <span class="type">CardMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(CardMapper.class);</span><br><span class="line">    List&lt;Card&gt; cards = mapper.selectAll();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Card c : cards) &#123;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><p>Card{id=1, number=’12345’, p=Person{id=1, name=’张三’, age=23}}<br>Card{id=2, number=’23456’, p=Person{id=2, name=’李四’, age=24}}<br>Card{id=3, number=’34567’, p=Person{id=3, name=’王五’, age=25}}</p><hr><h2 id="2-一对多-1"><a href="#2-一对多-1" class="headerlink" title="2.一对多"></a>2.一对多</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829271/samples/blog/dev/Untitled_1_td0nee.png" alt="Untitled"></p><ul><li>pojo类  Classes  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classClasses &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString  name;</span><br><span class="line"></span><br><span class="line">privateList&lt;Student&gt; students;</span><br><span class="line"></span><br><span class="line">publicClasses() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicClasses(Integer id, String name, List&lt;Student&gt; students) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.students = students;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">returnname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicList&lt;Student&gt; <span class="title function_">getStudents</span><span class="params">()</span> &#123;</span><br><span class="line">returnstudents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetStudents</span><span class="params">(List&lt;Student&gt; students)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.students = students;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Classes&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, students=&quot;</span> + students +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  Student  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classStudent &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br><span class="line"></span><br><span class="line"><span class="comment">//private List&lt;Course&gt; courses;   //多对多时增加一个属性</span></span><br><span class="line"></span><br><span class="line">publicStudent() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicStudent(Integer id, String name, Integer age) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*public Student(Integer id, String name, Integer age, List&lt;Course&gt; courses) &#123;</span></span><br><span class="line"><span class="comment">        this.id = id;</span></span><br><span class="line"><span class="comment">        this.name = name;</span></span><br><span class="line"><span class="comment">        this.age = age;</span></span><br><span class="line"><span class="comment">        this.courses = courses;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*public List&lt;Course&gt; getCourses() &#123;</span></span><br><span class="line"><span class="comment">        return courses;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public void setCourses(List&lt;Course&gt; courses) &#123;</span></span><br><span class="line"><span class="comment">        this.courses = courses;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">returnname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">returnage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>interface接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> interfaceClassesMapper &#123;</span><br><span class="line"><span class="comment">//查询全部</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from classes&quot;)</span></span><br><span class="line"><span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">@Result(column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">@Result(column = &quot;name&quot;,property = &quot;name&quot;),</span></span><br><span class="line"><span class="meta">@Result(</span></span><br><span class="line"><span class="meta">                    property = &quot;students&quot;,//被包含对象的变量名</span></span><br><span class="line"><span class="meta">javaType = List.class,//被包含对象的实际数据类型</span></span><br><span class="line"><span class="meta">column = &quot;id&quot;,//根据classes查询出的id字段来查询student表</span></span><br><span class="line"><span class="meta">/**</span></span><br><span class="line"><span class="meta">                     * many、@Many一对多固定写法</span></span><br><span class="line"><span class="meta">* select属性 指定调用哪个接口的哪个方法</span></span><br><span class="line"><span class="meta">*/</span></span><br><span class="line"><span class="meta">many =@Many(select = &quot;com.itheima.mapper.StudentMapper.selectByCid&quot;)</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    List&lt;Classes&gt; <span class="title function_">otmSelectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StudentMapper</span> &#123;</span><br><span class="line">    <span class="comment">//根据cid查询student表</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from student where cid = #&#123;cid&#125;&quot;)</span></span><br><span class="line">    List&lt;Student&gt; <span class="title function_">selectByCid</span><span class="params">(Integer cid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mapper映射文件（省略）</p><p>Test类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注解一对多查询所有</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidselectAll2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SessionUtils.getSqlsession();</span><br><span class="line"></span><br><span class="line">        <span class="type">ClassesMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(ClassesMapper.class);</span><br><span class="line">        List&lt;Classes&gt; classes = mapper.otmSelectAll();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Classes c : classes) &#123;</span><br><span class="line">            System.out.println(c.getId()+<span class="string">&quot;--&quot;</span>+c.getName());</span><br><span class="line">            List&lt;Student&gt; students = c.getStudents();</span><br><span class="line"><span class="keyword">for</span>(Student s : students) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span>+s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：<br>        1–黑马一班<br>        Student{id=1, name=’张三’, age=23}<br>        Student{id=2, name=’李四’, age=24}<br>        2–黑马二班<br>        Student{id=3, name=’王五’, age=25}<br>        Student{id=4, name=’马六’, age=26}</p><hr><h2 id="3-多对多-1"><a href="#3-多对多-1" class="headerlink" title="3.多对多"></a>3.多对多</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829272/samples/blog/dev/Untitled_2_jmayk2.png" alt="Untitled"></p><ul><li>pojo类  Course  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classCourse &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line"></span><br><span class="line">publicCourse() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicCourse(Integer id, String name) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">returnname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Course&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>  Student  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classStudent &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br><span class="line"></span><br><span class="line">privateList&lt;Course&gt; courses;<span class="comment">//多对多时增加一个属性</span></span><br><span class="line"></span><br><span class="line">publicStudent() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicStudent(Integer id, String name, Integer age) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*public Student(Integer id, String name, Integer age, List&lt;Course&gt; courses) &#123;</span></span><br><span class="line"><span class="comment">        this.id = id;</span></span><br><span class="line"><span class="comment">        this.name = name;</span></span><br><span class="line"><span class="comment">        this.age = age;</span></span><br><span class="line"><span class="comment">        this.courses = courses;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*public List&lt;Course&gt; getCourses() &#123;</span></span><br><span class="line"><span class="comment">        return courses;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public void setCourses(List&lt;Course&gt; courses) &#123;</span></span><br><span class="line"><span class="comment">        this.courses = courses;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">returnname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">returnage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>interface接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MtmStudentMapper</span> &#123;</span><br><span class="line">    <span class="comment">//查询student所有</span></span><br><span class="line">    <span class="meta">@Select(&quot;select distinct s.id,s.name,s.age from student s,stu_cr sc where sc.sid = s.id&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;name&quot;,property = &quot;name&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;age&quot;,property = &quot;age&quot;),</span></span><br><span class="line"><span class="meta">            @Result(</span></span><br><span class="line"><span class="meta">                    property = &quot;courses&quot;,  //被包含对象的变量名</span></span><br><span class="line"><span class="meta">                    javaType = List.class,    //被包含对象的实际数据类型</span></span><br><span class="line"><span class="meta">                    column = &quot;id&quot;,    //根据查询出的student的id作为关联条件 ，去查询中间表和课程表</span></span><br><span class="line"><span class="meta">                    /**</span></span><br><span class="line"><span class="meta">                     * many、@Many 一对多固定写法   （中间表一对多）</span></span><br><span class="line"><span class="meta">                     * select属性 指定调用哪个接口中的哪个方法</span></span><br><span class="line"><span class="meta">                    */</span></span><br><span class="line"><span class="meta">                    many=@Many(select = &quot;com.itheima.mapper.CourseMapper.selectById&quot;)</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    List&lt;Student&gt; <span class="title function_">mtmSelectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CourseMapper</span> &#123;</span><br><span class="line">    <span class="comment">//根据查询出的学生id查询课程信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select c.id,c.name from stu_cr sc,course c where sc.cid = c.id and sc.sid = #&#123;id&#125;&quot;)</span></span><br><span class="line">    List&lt;Course&gt; <span class="title function_">selectById</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mapper映射文件（省略）</p><p>Test类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注解多对多查询所有</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidselectAll3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SessionUtils.getSqlsession();</span><br><span class="line"></span><br><span class="line">        <span class="type">MtmStudentMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(MtmStudentMapper.class);</span><br><span class="line">        List&lt;Student&gt; stu = mapper.mtmSelectAll();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Student s : stu) &#123;</span><br><span class="line">            System.out.println(s.getId()+<span class="string">&quot;--&quot;</span>+s.getName()+<span class="string">&quot;--&quot;</span>+s.getAge());</span><br><span class="line">            List&lt;Course&gt; courses = s.getCourses();</span><br><span class="line"><span class="keyword">for</span>(Course c: courses) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span>+c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><pre><code>       1--张三--2       Course&#123;id=1, name=&#39;语文&#39;&#125;       Course&#123;id=2, name=&#39;数学&#39;&#125;        2--李四--24       Course&#123;id=1, name=&#39;语文&#39;&#125;       Course&#123;id=2, name=&#39;数学&#39;&#125;</code></pre><hr><h2 id="4-小结-1"><a href="#4-小结-1" class="headerlink" title="4.小结"></a>4.小结</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829278/samples/blog/dev/Untitled_3_kbx6bv.png" alt="Untitled"></p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660829282/samples/blog/dev/Untitled_4_zyo4ki.png" alt="Untitled"></p><p><strong>注意：</strong>本多表操作以查询作为演示，表中的外键字段并没有在实体类中体现。</p><hr><h1 id="三-构建SQL"><a href="#三-构建SQL" class="headerlink" title="三. 构建SQL"></a>三. 构建SQL</h1><h2 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1.基本介绍"></a>1.基本介绍</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828802/samples/blog/dev/g1_mcjorq.jpg" alt="Untitled"></p><h2 id="2-代码示例："><a href="#2-代码示例：" class="headerlink" title="2.代码示例："></a>2.代码示例：</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828801/samples/blog/dev/3_vrp3wg.jpg" alt="Untitled"></p><ul><li>pojo类：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classStudent &#123;</span><br><span class="line">privateInteger id;</span><br><span class="line">privateString name;</span><br><span class="line">privateInteger age;</span><br><span class="line"></span><br><span class="line">publicStudent() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicStudent(Integer id, String name, Integer age) &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">returnid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicString <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">returnname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">publicInteger <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">returnage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">voidsetAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">publicString <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>SqlReturn类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> classSqlReturn &#123;</span><br><span class="line"><span class="comment">//返回查询SQL语句</span></span><br><span class="line">publicString <span class="title function_">getSelectAll</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> newSQL()&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                SELECT(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                FROM(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回插入SQL语句</span></span><br><span class="line">publicString <span class="title function_">getInsert</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> newSQL()&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                INSERT_INTO(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">                INTO_VALUES(<span class="string">&quot;#&#123;id&#125;,#&#123;name&#125;,#&#123;age&#125;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回修改SQL语句</span></span><br><span class="line"><span class="comment">//加条件判断  达到动态修改的效果</span></span><br><span class="line">publicString <span class="title function_">getUpdate</span><span class="params">(Student stu)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> newSQL()&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                UPDATE(<span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//加条件判断  达到动态修改的效果</span></span><br><span class="line"><span class="keyword">if</span>(stu.getName()!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    SET(<span class="string">&quot;name=#&#123;name&#125;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="keyword">if</span>(stu.getAge()!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    SET(<span class="string">&quot;age=#&#123;age&#125;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                WHERE(<span class="string">&quot;id=#&#123;id&#125;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回删除SQL语句</span></span><br><span class="line">publicString <span class="title function_">getDelete</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> newSQL()&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                DELETE_FROM(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">                WHERE(<span class="string">&quot;id=#&#123;id&#125;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接口StudentMapper类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> interfaceStudentMapper &#123;</span><br><span class="line"><span class="comment">//@Select(&quot;select * from student&quot;)</span></span><br><span class="line"><span class="meta">@SelectProvider(type = SqlReturn.class,method = &quot;getSelectAll&quot;)</span></span><br><span class="line">    List&lt;Student&gt; <span class="title function_">getSelectAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Insert(&quot;insert into student values(#&#123;id&#125;,#&#123;name&#125;,#&#123;age&#125;)&quot;)</span></span><br><span class="line"><span class="meta">@InsertProvider(type = SqlReturn.class,method = &quot;getInsert&quot;)</span></span><br><span class="line">    Integer <span class="title function_">inster</span><span class="params">(Student stu)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Update(&quot;update student set name=#&#123;name&#125;,age=#&#123;age&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@UpdateProvider(type = SqlReturn.class,method = &quot;getUpdate&quot;)</span></span><br><span class="line">    Integer <span class="title function_">update</span><span class="params">(Student stu)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Delete(&quot;delete from student where id=#&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@DeleteProvider(type = SqlReturn.class,method = &quot;getDelete&quot;)</span></span><br><span class="line">    Integer <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-小结"><a href="#3-小结" class="headerlink" title="3.小结"></a>3.小结</h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660828805/samples/blog/dev/2_zgndaj.jpg" alt="2.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis入门</title>
      <link href="/2022/08/12/Mybatis%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/12/Mybatis%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="-mybatis-">◉<strong>MyBatis</strong></h1><h2 id="-mybatis-"><strong>一、MyBatis简介</strong></h2><h3 id="-1-mybatis-"><strong>1.什么是MyBatis</strong></h3><ul><li>MyBatis 是一款优秀的持久层框架，用于简化 JDBC 开发。</li><li>MyBatis 本是 Apache 的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。2013年11月迁移到Github。</li><li>官网：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></li></ul><h3 id="-2-"><strong>2.持久层</strong></h3><ul><li>负责将数据到保存到数据库的那一层代码。</li><li>JavaEE三层架构：表现层、业务层、持久层。</li></ul><h3 id="-3-"><strong>3.什么是框架</strong></h3><ul><li>框架就是一个半成品软件，是一套可重用的、通用的、软件基础代码模型。</li><li><p>在框架的基础之上构建软件编写更加高效、规范、通用、可扩展。</p></li></ul><h2 id="-mybatis-"><strong>二、MyBatis快速入门</strong></h2><h3 id="-1-"><strong>1.环境准备</strong></h3><ul><li>创建数据库和数据表，并添加测试数据</li></ul><pre><code class="lang-sql"><span class="hljs-comment">-- 创建mybatis数据库</span><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> mybatis;<span class="hljs-comment">-- 使用mybatis数据库</span><span class="hljs-keyword">USE</span> mybatis;<p><span class="hljs-comment">– 创建用户表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tb_user(<br>    <span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span> PRIMARY <span class="hljs-keyword">KEY</span> AUTO_INCREMENT,<br>    username <span class="hljs-built_in">varchar</span>(<span class="hljs-number">20</span>),<br>    <span class="hljs-keyword">password</span> <span class="hljs-built_in">varchar</span>(<span class="hljs-number">20</span>),<br>    gender <span class="hljs-built_in">char</span>(<span class="hljs-number">1</span>),<br>    addr <span class="hljs-built_in">varchar</span>(<span class="hljs-number">30</span>)<br>);</p><p><span class="hljs-comment">– 添加数据</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tb_user <span class="hljs-keyword">VALUES</span> (<span class="hljs-literal">null</span>, <span class="hljs-string">‘zhangsan’</span>, <span class="hljs-string">‘123’</span>, <span class="hljs-string">‘男’</span>, <span class="hljs-string">‘北京’</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tb_user <span class="hljs-keyword">VALUES</span> (<span class="hljs-literal">null</span>, <span class="hljs-string">‘李四’</span>, <span class="hljs-string">‘234’</span>, <span class="hljs-string">‘女’</span>, <span class="hljs-string">‘天津’</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tb_user <span class="hljs-keyword">VALUES</span> (<span class="hljs-literal">null</span>, <span class="hljs-string">‘王五’</span>, <span class="hljs-string">‘11’</span>, <span class="hljs-string">‘男’</span>, <span class="hljs-string">‘西安’</span>);</p><p><span class="hljs-comment">– 查询用户表</span><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> tb_user;<br></code></pre></p><ul><li>创建新的maven项目，pom.xml需要添加的依赖</li></ul><pre><code>        <!--mybatis 驱动-->            <groupId>org.mybatis</groupId>            <artifactId>mybatis</artifactId>            <version>3.5.5</version>        <!--mysql 驱动-->            <groupId>mysql</groupId>            <artifactId>mysql-connector-java</artifactId>            <version>5.1.46</version>        <!--junit 单元测试-->            <groupId>junit</groupId>            <artifactId>junit</artifactId>            <version>4.13</version>            <scope>test</scope>        <!-- 添加slf4j日志api -->            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>            <version>1.7.20</version>        <!-- 添加logback-classic依赖 -->            <groupId>ch.qos.logback</groupId>            <artifactId>logback-classic</artifactId>            <version>1.2.3</version>        <!-- 添加logback-core依赖 -->            <groupId>ch.qos.logback</groupId>            <artifactId>logback-core</artifactId>            <version>1.2.3</version></code></pre><ul><li>将资料中的logback.xml复制到main下的resources下</li><li>在resources下编写 mybatis-config.xml 核心配置文件</li></ul><pre><code class="lang-xml"><span class="php"><span class="hljs-meta">&lt;?</span>xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"UTF-8"</span> <span class="hljs-meta">?&gt;</span></span><span class="hljs-meta">&lt;!DOCTYPE configuration        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">environments</span> <span class="hljs-attr">default</span>=<span class="hljs-string">"development"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">environment</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"development"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">transactionManager</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"JDBC"</span>/&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"POOLED"</span>&gt;</span>                <span class="hljs-comment">&lt;!--数据库连接信息--&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"driver"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"com.mysql.jdbc.Driver"</span>/&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"url"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"jdbc:mysql://127.0.0.1/mybatis?useSSL=false"</span>/&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"root"</span>/&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"1234"</span>/&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">environment</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">environments</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">mappers</span>&gt;</span>        <span class="hljs-comment">&lt;!--加载映射配置文件--&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">"UserMapper.xml"</span>/&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">mappers</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></code></pre><ul><li>在resources下编写 UserMapper.xml 映射配置文件</li></ul><pre><code class="lang-xml"><span class="php"><span class="hljs-meta">&lt;?</span>xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"UTF-8"</span> <span class="hljs-meta">?&gt;</span></span><span class="hljs-meta">&lt;!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span><span class="hljs-comment">&lt;!--    namespace：名称空间    配合要执行的sql语句标签中的id使用--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">"test"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"selectAll"</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">"com.itheima.pojo.User"</span>&gt;</span>        SELECT * FROM tb_user    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span></code></pre><ul><li>编写 User 实体类</li></ul><pre><code class="lang-java"><span class="hljs-comment"><p>/<em>    用户实体类 </em>/public class User &#123;    private Integer id;    private String username;    private String password;    private Character gender;    private String addr;</p><pre><code><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">User</span><span class="hljs-params">()</span> </span>&#123;&#125;<p><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">User</span><span class="hljs-params">(Integer id, String username, String password, Character gender, String addr)</span> </span>&#123;<br>    <span class="hljs-keyword">this</span>.id = id;<br>    <span class="hljs-keyword">this</span>.username = username;<br>    <span class="hljs-keyword">this</span>.password = password;<br>    <span class="hljs-keyword">this</span>.gender = gender;<br>    <span class="hljs-keyword">this</span>.addr = addr;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function">Integer <span class="hljs-title">getId</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> id;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setId</span><span class="hljs-params">(Integer id)</span> </span>&#123;<br>    <span class="hljs-keyword">this</span>.id = id;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function">String <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> username;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setUsername</span><span class="hljs-params">(String username)</span> </span>&#123;<br>    <span class="hljs-keyword">this</span>.username = username;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function">String <span class="hljs-title">getPassword</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> password;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setPassword</span><span class="hljs-params">(String password)</span> </span>&#123;<br>    <span class="hljs-keyword">this</span>.password = password;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function">Character <span class="hljs-title">getGender</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> gender;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setGender</span><span class="hljs-params">(Character gender)</span> </span>&#123;<br>    <span class="hljs-keyword">this</span>.gender = gender;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function">String <span class="hljs-title">getAddr</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> addr;<br>&#125;</p><p><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setAddr</span><span class="hljs-params">(String addr)</span> </span>&#123;<br>    <span class="hljs-keyword">this</span>.addr = addr;<br>&#125;</p><p><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-function">String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">“User&#123;“</span> +<br>            <span class="hljs-string">“id=”</span> + id +<br>            <span class="hljs-string">“, username=’”</span> + username + <span class="hljs-string">‘&#39;‘</span> +<br>            <span class="hljs-string">“, password=’”</span> + password + <span class="hljs-string">‘&#39;‘</span> +<br>            <span class="hljs-string">“, gender=”</span> + gender +<br>            <span class="hljs-string">“, addr=’”</span> + addr + <span class="hljs-string">‘&#39;‘</span> +<br>            <span class="hljs-string">‘&#125;’</span>;<br>&#125;<br></code></pre><p>}</p></p><p></code></pre></p><h3 id="-2-"><strong>2.代码实现</strong></h3><ul><li>测试类</li></ul><pre><code class="lang-java"><span class="hljs-comment">        <p>public class MyBatisDemo01 &#123;    public static void main(String[] args) throws Exception &#123;        //1.加载核心配置文件，获取SqlSessionFactory工厂对象        InputStream is = Resources.getResourceAsStream("mybatis-config.xml");        SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(is); <pre><code>    //2.获取SqlSession对象    SqlSession sqlSession = sqlSessionFactory.openSession();    //3.执行sql语句，并接收返回结果    List&lt;User&gt; list = sqlSession.selectList(&quot;test.selectAll&quot;);//名称空间.id属性值    //4.释放资源    sqlSession.close();    //5.遍历集合，处理结果    for (User user : list) &#123;        System.out.println(user);    &#125;&#125;</code></pre><p>}</p></p></code></pre><h2 id="-sql-"><strong>三、解决SQL语句警告</strong></h2><ul><li>如果在 UserMapper.xml 映射配置文件中，sql语句报红色，则按照以下配置</li><li><p>在Idea中配置MySQL数据库连接</p><p>  <img src="https://res.cloudinary.com/di22igym7/image/upload/v1660390976/samples/blog/dev/23_ugngkl.jpg" alt="23.jpg"></p></li></ul><h2 id="-mapper-"><strong>四、Mapper代理开发</strong></h2><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660390977/samples/blog/dev/24_ltp4hb.jpg" alt="c21fe15dc4921e350b09c8627811db2.jpg"></p><h3 id="-2-mapper-"><strong>1.使用Mapper代理开发的步骤</strong></h3><ul><li><p>定义与SQL映射文件同名的Mapper接口，并且将Mapper接口和SQL映射文件放置在同一目录下</p><p>  <img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391160/samples/blog/dev/26_ywjebu.jpg" alt="26.jpg"></p><p>  <img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391208/samples/blog/dev/27_w5gtdk.jpg" alt="27.jpg"></p></li><li><p>设置SQL映射文件的namespace属性为Mapper接口全限定名: <br>namespace="com.itheima.mapper.UserMapper"</p></li></ul><ul><li>细节：如果Mapper接口名称和SQL映射文件名称相同，并在同一目录下，则可以使用包扫描的方式简化SQL映射文件的加载。在核心配置文件中修改</li></ul><pre><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">mappers</span>&gt;</span><span class="hljs-comment">&lt;!--        &lt;mapper resource="com/itheima/mapper/UserMapper.xml"/&gt;--&gt;</span><p><span class="hljs-comment">&lt;!–        包扫描方式  扫描路径下的所有映射配置文件–&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">“com.itheima.mapper”</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mappers</span>&gt;</span><br></code></pre></p><ul><li>编码<ul><li>通过 SqlSession 的 getMapper() 方法获取 Mapper 接口的代理实现类对象</li><li>调用实现类对象对应方法完成sql的执行</li></ul></li></ul><pre><code class="lang-java"><span class="hljs-comment">/*代理开发 */</span>public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MybatisTest2</span> </span>&#123;    public <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(<span class="hljs-built_in">String</span>[] args) throws Exception&#123;        InputStream <span class="hljs-keyword">is</span> = Resources.getResourceAsStream(<span class="hljs-string">"mybatis-config.xml"</span>);        SqlSessionFactory <span class="hljs-keyword">factory</span> = <span class="hljs-keyword">new</span> SqlSessionFactoryBuilder().build(<span class="hljs-keyword">is</span>);        SqlSession sqlSession = <span class="hljs-keyword">factory</span>.openSession();        UserMapper mapper = sqlSession.getMapper(UserMapper.<span class="hljs-keyword">class</span>);        <span class="hljs-comment">//插入  必须commit</span>        mapper.insertUser(<span class="hljs-keyword">null</span>,<span class="hljs-string">"gabrielle"</span>,<span class="hljs-string">"1234"</span>,<span class="hljs-string">"男"</span>,<span class="hljs-string">"和平北路"</span>);        sqlSession.commit();        <span class="hljs-comment">//查找</span>        <span class="hljs-built_in">List</span>&lt;User&gt; users = mapper.selectAll();        <span class="hljs-keyword">for</span> (User user : users) &#123;            System.out.println(user);        &#125;    &#125;&#125;</code></pre><h3 id="-mybatis-"><strong>五、MyBatis核心配置文件</strong></h3><h3 id="-1-"><strong>1.核心配置文件组成部分</strong></h3><ul><li><p>注意：书写顺序严格限制</p><p>  <img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391349/samples/blog/dev/28_tlixat.jpg" alt="28.jpg"></p></li></ul><h3 id="-2-typealiases-"><strong>2.数据类型别名typeAliases</strong></h3><ul><li><p>可以给不同的数据类型起别名</p><ul><li><p>核心配置文件中加入别名的标签</p><pre><code class="lang-xml"><span class="hljs-comment">&lt;!--    起别名--&gt;</span>      <span class="hljs-comment">&lt;!--          给某个包下所有的类起别名          别名就是类首字母小写      --&gt;</span><span class="hljs-comment">&lt;!--    映射配置文件中 resultType="" 不用写全类名了--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">typeAliases</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"com.itheima.pojo"</span>/&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">typeAliases</span>&gt;</span></code></pre></li><li><p>映射配置文件中，需要用到某个类的，使用别名即可</p><pre><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">"com.itheima.mapper.UserMapper"</span>&gt;</span>  <span class="hljs-comment">&lt;!--&lt;select id="selectAll" resultType="com.itheima.pojo.User"&gt;--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"selectAll"</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">"user"</span>&gt;</span>      SELECT * FROM tb_user  <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span></code></pre></li><li><p>Java提供好的类型，已经默认有别名了</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391351/samples/blog/dev/29_yfjhpw.jpg" alt="29.jpg"></p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391346/samples/blog/dev/30_meoxv1.jpg" alt="30.jpg"></p></li></ul></li></ul><h3 id="-3-environments-"><strong>3.配置数据库连接environments</strong></h3><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391347/samples/blog/dev/31_jmnhr9.jpg" alt="31.jpg"></p><h3 id="-4-mappers-"><strong>4.加载映射配置文件mappers</strong></h3><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1660391348/samples/blog/dev/32_hbgqza.jpg" alt="31.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notion</title>
      <link href="/2022/06/06/Notion/"/>
      <url>/2022/06/06/Notion/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ALL-IN-ONE"><a href="#ALL-IN-ONE" class="headerlink" title="ALL-IN-ONE"></a>ALL-IN-ONE</h1><h2 id="超赞的视频教程"><a href="#超赞的视频教程" class="headerlink" title="超赞的视频教程!"></a><a href="https://thomasjfrank.com/fundamentals/">超赞的视频教程!</a><img src="https://res.cloudinary.com/di22igym7/image/upload/v1654520745/samples/blog/iuryeagjtupdjvhruv99.png" class="justify-small" style="margin: 0; width:30px; height:30px; position:absolute; left:160px; top: 5px;"></h2><div  style="padding-top: 56.25%; position: relative;"><iframe src="https://www.youtube.com/embed/Lup-35YbWJc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen style="position: absolute; height: 100%; width: 100%; top: 0; left: 0;"></iframe></div><br><h2 id="Notion-中文文档-ensp"><a href="#Notion-中文文档-ensp" class="headerlink" title="Notion 中文文档&ensp;"></a><a href="https://www.notion.so/cnotion/Notion-054e065841894c4e8852afd629c9fbdc">Notion 中文文档</a>&ensp;<i class="fas fa-link"></i></h2><blockquote><p>(官方中文在路上)</p></blockquote><br><h2 id="Notion-官方支持-ensp"><a href="#Notion-官方支持-ensp" class="headerlink" title="Notion 官方支持&ensp;"></a><a href="https://www.notion.so/help">Notion 官方支持</a>&ensp;<i class="fas fa-link"></i></h2><br><hr><p><a href="https://ruddy-wedelia-91f.notion.site/Personal-Dashboard-5b714053197f4913b13f0ca69afcede8">https://ruddy-wedelia-91f.notion.site/Personal-Dashboard-5b714053197f4913b13f0ca69afcede8</a></p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>放一波美图😍</title>
      <link href="/2022/01/17/%E6%94%BE%E4%B8%80%E6%B3%A2%E7%BE%8E%E5%9B%BE/"/>
      <url>/2022/01/17/%E6%94%BE%E4%B8%80%E6%B3%A2%E7%BE%8E%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431542/samples/blog/dressup9_xw1gp9.jpg" style="width: 100%"><div style="opacity: 0.2; background-color: #5DADE2; position:absolute; left:20%; top:570px; width:40%; height:300px"></div><div style="position:absolute; left:17%; top:260px; width:65%; height:200px">    <font size="4" color="#F08080"><p style="position: relative; top: 420px; left: 30%"><b>更衣人偶坠入爱河</b></p></font>    <font size="8" color="#F08080"><p style="position: relative; top: 370px; left: 17%; font-weight: bold;">Dress-up darling</p></font></div><span id="more"></span><div style="position: relative; width:100%; height:350px; margin-top:30px;">    <div style="position: relative; width:50%; height:50%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431541/samples/blog/dressup3_sapxbt.jpg" style="width: 100%">    </div>    <div style="position: absolute; left: 50%; top: 0%; width:50%; height:60%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431541/samples/blog/dressup6_l5ck5t.jpg" style="width: 95%; height:100%;">    </div>    <div style="position: absolute; left: 50%; top: 56%; width:25%; height:50%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431541/samples/blog/dressup5_zpfymz.jpg" style="width: 100%">    </div>    <div style="position: absolute; left: 75%; top: 56%; width:25%; height:50%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431541/samples/blog/dressup4_frcn1s.jpg" style="width: 100%">    </div></div><div style="position: relative; width:100%; height:410px; margin-top:75px;">    <div style="position: relative; width:50%; height:50%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431543/samples/blog/dressup10_nfiqbr.jpg" style="width: 100%;">    </div>    <div style="position: absolute; left: 50%; top: 0%; width:50%; height:50%; overflow:hidden;">        <video controls="controls" loop="loop" autoplay="autoplay" style="width:100%; vertical-align:middle;">            <source src="movie.ogg" type="video/ogg" />            <source src="https://res.cloudinary.com/di22igym7/video/upload/v1642431557/samples/blog/dressup14_qnjfcr.mp4" type="video/mp4" />        </video>    </div>    <div style="position: absolute; top: 50%; width:50%; height:50%; overflow: hidden;">        <video controls="controls" loop="loop" autoplay="autoplay" style="width:100%; vertical-align:middle;">            <source src="movie.ogg" type="video/ogg" />            <source src="https://res.cloudinary.com/di22igym7/video/upload/v1642431557/samples/blog/dressup15_mc2mlz.mp4" type="video/mp4" />        </video>    </div>    <div style="position: absolute; left: 50%; top: 50%; width:50%; height:50%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431541/samples/blog/dressup2_zi2wn3.jpg" style="width: 98%; height:102%;">    </div></div><div style="position: relative; width:100%; height:600px; margin-top:30px;">    <div style="position: relative; width:48%; height:55%; float:left;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431541/samples/blog/dressup1_a7byzu.jpg" style="width: 80%; height:100%;">    </div>    <div style="position: absolute; left: 0%; top: 60%; width:48%; height:45%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642439191/samples/blog/dressup8_b2ik63.jpg" style="width: 90%; height:90%;">    </div>    <div style="position: relative; left: 5%; top: 0%; width:52%; height:100%; float:left;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431543/samples/blog/dressup13_exq2gf.jpg" style="width: 90%; height:100%;">    </div></div><div style="position: relative; width:100%; height:550px; margin-top:30px; margin-bottom:100px;">    <div style="position: relative; width:50%; height:100%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642431543/samples/blog/dressup12_fnvfwr.jpg" style="width: 85%; height:95%;">    </div>    <div style="position: absolute; left: 48%; top: 0%; width:50%; height:69%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642439071/samples/blog/dressup7_yigqwe.jpg" style="width: 85%; height: 85%; overflow: hidden;">    </div>    <div style="position: absolute; left: 49%; top: 60%; width:50%; height:35%;">        <img src="https://res.cloudinary.com/di22igym7/image/upload/v1642438155/samples/blog/dressup14_iuriqd.png" style="width: 90%; height:97%;">    </div></div>]]></content>
      
      
      
        <tags>
            
            <tag> anime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BEIJING1989</title>
      <link href="/2021/12/13/BEIJING1989/"/>
      <url>/2021/12/13/BEIJING1989/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>///</p><span id="more"></span><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381878/samples/blog/ming-tombs-entrance---1989_410930031_o_q3ksen.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381978/samples/blog/-basketball-in-the-forbidden-city---beijing-1989_395617609_o_prjxd8.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381979/samples/blog/bound-feet---beijing-1989_380140341_o_yvqkdz.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381879/samples/blog/--beijing---1989_389813245_o_ptjb62.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381878/samples/blog/hutong-life-2---beijing-1989_392717004_o_auvkl2.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381879/samples/blog/streets-of-beijing---1989_396644071_o_pcoche.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381881/samples/blog/young-and-old---near-ming-tombs---outside-beijing-1989_410929178_o_nhb8sc.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381880/samples/blog/jim-drinks-in-the-atmosphere---beijing-1989_415312811_o_uqr3us.jpg" alt="1"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1639381880/samples/blog/under-the-willows-by-the-moat-near-the-palace_391863306_o_qfth2w.jpg" alt="1"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 历史记忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>想去</title>
      <link href="/2021/10/16/%E7%99%BD%E5%AB%96%E5%AD%98%E5%82%A8/"/>
      <url>/2021/10/16/%E7%99%BD%E5%AB%96%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><span id="more"></span><p style="font-size:18px" align="center">Norway</p><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"video":{"url":"https://link.ap1.storjshare.io/jubhjvxksshv6hhzl7tf4vdjv6zq/blog%2FNorway.mp4?view","pic":"https://res.cloudinary.com/di22igym7/image/upload/v1634522771/samples/blog/norway_hivlcw.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> ]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aplayer / Dplayer</title>
      <link href="/2021/09/19/Aplayer-Dplayer/"/>
      <url>/2021/09/19/Aplayer-Dplayer/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>感谢&ensp;Aplayer / Dplayer &ensp;作者:&ensp;<a href="https://github.com/DIYgod">DIYgod·Github</a></p><span id="more"></span><h3 id="Aplayer-试用"><a href="#Aplayer-试用" class="headerlink" title="Aplayer 试用"></a>Aplayer 试用</h3><script>console.error("Error: [hexo-tag-aplayer] Unrecognized tag argument(2): autoplay=false");</script><h4 id="歌曲"><a href="#歌曲" class="headerlink" title="歌曲"></a>歌曲</h4>    <div id="aplayer-xCYLQjRQ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="21890560" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h4 id="歌单✨-网易云同步"><a href="#歌单✨-网易云同步" class="headerlink" title="歌单✨(网易云同步)"></a><a href="https://gabrielle0233.github.io/playlist/">歌单</a>✨<p style="font-size:14px">(网易云同步)</p></h4>    <div id="aplayer-HMHhhIOh" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="6978048861" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"    ></div><h3 id="Dplayer-试用"><a href="#Dplayer-试用" class="headerlink" title="Dplayer 试用"></a>Dplayer 试用</h3><p>小林家的龍女僕S&ensp;OP&ensp; -&ensp;「愛のシュプリーム！」&ensp;fhána</p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"https://res.cloudinary.com/di22igym7/video/upload/v1632045077/samples/blog/%E6%84%9B%E3%81%AE%E3%82%B7%E3%83%A5%E3%83%97%E3%83%AA%E3%83%BC%E3%83%A0poor_lldmav.mp4","pic":"https://res.cloudinary.com/di22igym7/image/upload/v1632020567/samples/blog/%E9%BE%99%E5%A5%B3%E4%BB%86s_ckzngv.jpg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> <p>来源&ensp;<i class="fas fa-link"></i>&ensp;<a href="https://www.youtube.com/watch?v=XCs7FacjHQY">https://www.youtube.com/watch?v=XCs7FacjHQY</a><br>没有后端，还发不了弹幕。<br>下的4K，因为贫穷的限制，码率从9降到2。 ╥_╥</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拼了个音频</title>
      <link href="/2021/09/18/%E4%B8%80%E4%B8%AA%E9%9F%B3%E9%A2%91/"/>
      <url>/2021/09/18/%E4%B8%80%E4%B8%AA%E9%9F%B3%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>社畜回家</p><span id="more"></span><p><audio src="https://res.cloudinary.com/di22igym7/video/upload/v1631971762/samples/blog/%E7%A4%BE%E7%95%9C%E5%9B%9E%E5%AE%B6_jdijpt.mp3" controls="controls"></audio></p>]]></content>
      
      
      
        <tags>
            
            <tag> 音影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿富汗局势：塔利班占领总统府 喀布尔陷落  BBC News  (test~)</title>
      <link href="/2021/08/16/%E9%98%BF%E5%AF%8C%E6%B1%97%E5%B1%80%E5%8A%BF%EF%BC%9A%E5%A1%94%E5%88%A9%E7%8F%AD%E5%8D%A0%E9%A2%86%E6%80%BB%E7%BB%9F%E5%BA%9C-%E5%96%80%E5%B8%83%E5%B0%94/"/>
      <url>/2021/08/16/%E9%98%BF%E5%AF%8C%E6%B1%97%E5%B1%80%E5%8A%BF%EF%BC%9A%E5%A1%94%E5%88%A9%E7%8F%AD%E5%8D%A0%E9%A2%86%E6%80%BB%E7%BB%9F%E5%BA%9C-%E5%96%80%E5%B8%83%E5%B0%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112167/samples/blog/1_wadzca.jpg" alt="1"></p><h4 id="塔利班士兵已进入阿富汗首都喀布尔并占领了总统府，这意味着阿富汗政府的垮台，而塔利班即将重掌该国的控制权。"><a href="#塔利班士兵已进入阿富汗首都喀布尔并占领了总统府，这意味着阿富汗政府的垮台，而塔利班即将重掌该国的控制权。" class="headerlink" title="塔利班士兵已进入阿富汗首都喀布尔并占领了总统府，这意味着阿富汗政府的垮台，而塔利班即将重掌该国的控制权。"></a>塔利班士兵已进入阿富汗首都喀布尔并占领了总统府，这意味着阿富汗政府的垮台，而塔利班即将重掌该国的控制权。</h4><p>美国军队正在控制喀布尔的国际机场，在塔利班占领阿富汗后，绝望的居民试图逃离这座城市。<span id="more"></span></p><p>阿富汗总统加尼（Ashraf Ghani）在周日（8月15日）已离开阿富汗，前往塔吉克斯坦。副总统萨利赫（Amrullah Saleh）也已逃离喀布尔。</p><p>美联社援引塔利班一名官员的话称，该武装组织将很快在首都的总统府宣布成立“阿富汗伊斯兰酋长国”（Islamic Emirate of Afghanistan）。这是1996年至2001年间，塔利班政权首次统治阿富汗时使用的国号。</p><p>随着政权即将更迭，喀布尔陷入混乱，大量居民和外国人试图逃离。塔利班称，为了“阻止打劫”，其士兵已进城维持秩序。</p><p>对许多阿富汗人来说，这是可怕的一日，标志着塔利班在被美国领导的联军驱逐近20年后重新掌权。</p><p>早些时候，塔利班攻下所有关键城市。 士兵正“从四面八方”进入首都喀布尔。塔利班占领阿富汗的速度超出了人们的意料。</p><p>半岛电视台发布的画面显示，持枪的武装分子来到总统府内。</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112167/samples/blog/2_lm93uq.jpg" alt="2"><br>| 阿富汗人挤在机场附近的铁丝网后面注释着前面的美军士兵，</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112167/samples/blog/3_prviwy.jpg" alt="3"><br><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112167/samples/blog/4_yk5gpm.jpg" alt="4"><br>| 美国已派出军用直升机疏散使馆工作人员。</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112167/samples/blog/5_nef09u.jpg" alt="5"><br>塔利班发言人苏海尔·沙欣（Suhail Shaheen）对BBC说，塔利班寻求在未来几天内在阿富汗“和平进行权力移交”。</p><p>“我们向人民，特别是喀布尔市民保证，他们的财产和生命安全无虞，”他说道。</p><p>他还声称，塔利班执政后将允许女性接受教育，并将保证媒体自由。</p><p>BBC视频记者马利克·穆达西（Malik Mudassir）通常在幕后负责摄像，但他昨天从喀布尔现场进行了实时报道。在他身后，塔利班正在街道上巡逻。</p><p>“塔利班已经几乎控制了阿富汗，现在他们已进入喀布尔，我从这里就能看到他们在街上巡逻，”他说道。“他们从武装部队那里获得了政府车辆和武装车辆。”</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112168/samples/blog/6_klkfsr.jpg" alt="6"><br>| 许多逃至喀布尔的家庭在临时营地生活。</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112168/samples/blog/7_l0oojr.jpg" alt="7"><br>| 阿富汗北方省份的居民逃到喀布尔后把公园当作避难所</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112169/samples/blog/8_nd206z.jpg" alt="8"><br>| 许多人在喀布尔公园简易的帆布帐篷中睡眠过夜</p><img src="https://res.cloudinary.com/di22igym7/image/upload/c_scale,w_15/v1629113859/samples/blog/twitter_icon_akhoz9.png" alt="" title="location" class="justify-small" style="margin: 0;"><div class="twitter-wrapper"><blockquote class="twitter-tweet"><a href="https://twitter.com/TomHourigan/status/1427027743951228930"></a></blockquote></div><script async defer src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>他还描述了城市里的民众如何试图逃离喀布尔，包括一些有妇女和儿童的家庭。</p><p>“从机场到阿富汗郊区都出现严重的交通堵塞……我可以看到他们试图逃离，他们看起来很沮丧、忧伤和挫败。”</p><p>在惊慌中，很多喀布尔市民在银行前排队取钱，还有很多居民步行前往机场，试图离开这个国家。</p><p>一名22岁的学生告诉BBC，他已经走了5个多小时。</p><p>“我的脚很痛，起了水泡，我觉得很难站起来，”他说道。</p><p>“现在我要走了，我想到了家人，他们没有任何办法逃跑，我看不到未来。”</p><p>喀布尔机场周日（8月15日）晚间一度出现混乱。当时，外国人的撤离仍在进行，但突然传出枪声。</p><p>有报道称有平民在停机坪上受伤。一名目击者告诉BBC，很多人绝望地逃离，看上去像踩踏。</p><p><img src="https://res.cloudinary.com/di22igym7/image/upload/v1629112168/samples/blog/9_d2n9sk.jpg" alt="9"><br>| 一名塔利班战士坐在拉格曼省路边的阿富汗国民军（ANA）车辆内。</p><img src="https://res.cloudinary.com/di22igym7/image/upload/c_scale,w_15/v1629113859/samples/blog/twitter_icon_akhoz9.png" alt="" title="location" class="justify-small" style="margin: 0;"><div class="twitter-wrapper"><blockquote class="twitter-tweet"><a href="https://twitter.com/bsarwary/status/1427002551858311173"></a></blockquote></div><script async defer src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>美国已部署数千名士兵，帮助撤离美国工作人员及协助执行任务的阿富汗人。</p><p>周日（8月15日），整个喀布尔市区上空都笼罩在运送外交人员的直升机轰鸣声中。有报道称，使馆大院附近浓烟滚滚，疑似一些重要的文件被焚毁。</p><p>英国则部署了600名士兵，协助完成撤离任务。</p><p>阿富汗政府垮台的速度之快使美国总统拜登（Joe Biden）受到巨大的批评。美国政府官员现在承认他们高估了阿富汗军队的能力。</p><p>美国国务卿布林肯（Anthony Blinken）对CNN说，阿富汗的陷落“发生得比我们预期的要快”。</p><p>美国前总统特朗普（Donald Trump）发出呼吁，要求拜登“因允许阿富汗现状发生而羞愧地辞职”。他还声称，如果他还是总统，美国的撤军将“大不相同，也会更加成功”。</p><p>拜登团队回击说，美国与塔利班签订的撤军协议是在特朗普任内谈判达成的。</p><p>然而，撤军的具体细节的确由拜登政府决定。BBC北美编辑乔·索普尔（Jon Sopel）表示，“该政策的框架可能由特朗普制定，但拜登应为这场正加剧的混乱负责。”</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(test)</title>
      <link href="/2021/08/15/test/"/>
      <url>/2021/08/15/test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://res.cloudinary.com/di22igym7/image/upload/q_100,r_30/a_0/v1629014848/samples/1611925196842_var9dt.jpg" alt="win11bg"></p><span id="more"></span><p>No more~</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bad Bunny and Aventura Share Video for New Song “Volví” (test ^-^)</title>
      <link href="/2021/08/14/bunny/"/>
      <url>/2021/08/14/bunny/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=80% height=86 src="//music.163.com/outchain/player?type=2&id=1866152850&auto=0&height=66"></iframe><blockquote><p>Youtube 🔗</p></blockquote><iframe width="100%" height="400" src="https://www.youtube.com/embed/ayd3yWr4tqU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>Bad Bunny和 Aventura 合作的新曲 Volví 发布。这首歌区分了 Bad Bunny 带有陷阱色彩的 reggaetón 和 Aventura 独特的 bachata 吉他风格之间的差异。</p><p>Aventura 曾经可以说是最受欢迎的多米尼加男孩乐队成员，于 2011 年首次离队，成员们开始追求独唱事业；Romeo Santos 从此被称为“King of Bachata”。该乐队在过去十年中多次重聚，并计划在 2020 年巡演，但因冠状病毒大流行而推迟。</p><p>Bad Bunny 在 2020 年发行了三张个人 LPs，首次凭借西班牙语专辑在 Billboard 的专辑榜上获得第一名。他在2021年发布了多首歌曲，包括 100 Millones 、 Yonaguni 和 De Museo。</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gabrielle的第一个博客</title>
      <link href="/2021/08/13/dkhz%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/08/13/dkhz%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="いち"><a href="#いち" class="headerlink" title="いち"></a>いち</h1><h2 id="に"><a href="#に" class="headerlink" title="に"></a>に</h2><h3 id="さん"><a href="#さん" class="headerlink" title="さん"></a>さん</h3><h4 id="よん"><a href="#よん" class="headerlink" title="よん"></a>よん</h4><h5 id="ご"><a href="#ご" class="headerlink" title="ご"></a>ご</h5><span id="more"></span><p><strong>好粗</strong></p><p><em>躺</em></p><p>空格<br>&ensp;使用英文时候的首行缩进，一般书写段开头要求打5个<br>&emsp;使用中文时候的首行缩进，一般书写段开头要求打2个</p><details>  <summary><div style="height: 40px; width: 30%; border: 0.5rem solid gold; border-radius:10px; background-color: gold; text-align:center">展开</div></summary>  <pre>  内容1  </pre><p>  内容2</p></details><br><p><a href="https://hexo.io/zh-cn/" class="myButton210813">HEXO</a></p><p><del>一穿三</del></p><blockquote><p>引用</p></blockquote><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># node</span></span><br><span class="line"><span class="comment"># git</span></span><br><span class="line">cnpm install -g hexo-cli    <span class="comment"># 安装hexo框架</span></span><br><span class="line">hexo -v<span class="comment"># 查看hexo版本</span></span><br><span class="line"><span class="built_in">mkdir</span> blog<span class="comment"># 创建blog目录</span></span><br><span class="line"><span class="built_in">cd</span> blog <span class="comment"># 进入blog目录</span></span><br><span class="line">sudo hexo init <span class="comment"># 初始化</span></span><br><span class="line">hexo s<span class="comment"># 启动本地博客服务</span></span><br><span class="line">http://localhost:4000/<span class="comment"># 本地访问地址</span></span><br><span class="line">hexo n dkhz的第一个博客 <span class="comment"># 创建新的文章 </span></span><br><span class="line"><span class="comment"># 返回blog目录</span></span><br><span class="line">hexo clean <span class="comment"># 清理</span></span><br><span class="line">hexo g <span class="comment"># 生成</span></span><br><span class="line"><span class="comment"># Github创建一个新的仓库 gabrielle0233.github.io</span></span><br><span class="line">npm install --save hexo-deployer-git <span class="comment"># 在blog目录下安装git部署插件</span></span><br><span class="line"><span class="comment"># 配置_config.yml </span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line"> repo: https://github.com/gabrielle0233/gabrielle0233.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">hexo d<span class="comment"># 部署到Github仓库</span></span><br><span class="line">https://gabrielle0233.github.io/  <span class="comment"># 访问这个地址可以查看博客</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-XXXX.git themes/XXXX  <span class="comment"># 下载主题到本地</span></span><br><span class="line"><span class="comment"># 修改hexo根目录下的 _config.yml 文件 ： theme: XXXX</span></span><br><span class="line">hexo c<span class="comment"># 清理</span></span><br><span class="line">hexo g<span class="comment"># 生成</span></span><br><span class="line">hexo d<span class="comment"># 部署到远程Github仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://gabrielle0233.github.io/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
